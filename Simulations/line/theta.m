%%-----------------------------------------------------------------------%%
% Description: theta.m                                                    %
%   Compute the unknown parameters of M, point, u                         %
%                                                                         %
%   Input:  u               3x1 direction vector of the 3-D line          %
%           M               3x4 perspective projection matrix             % 
%           point           3x1 point on the 3-D line                     %
%   Output: Theta           216x1                                         %
%                                                                         %
% Copyright:   Shanghai SJTU Autonomous Robot Lab.                        %
% Author:      Jay Wang                                                   %
% Version:     Beta 1.0.1                                                 %
% Data:        2015.04.17                                                 %
%%-----------------------------------------------------------------------%%

%%
function Theta = theta(M, point, u)
m1=M(1,1); m2=M(1,2); m3=M(1,3); m4=M(1,4);
m5=M(2,1); m6=M(2,2); m7=M(2,3); m8=M(2,4);
m9=M(3,1);m10=M(3,2);m11=M(3,3);m12=M(3,4);
p1=point(1);p2=point(2);p3=point(3); 
u1=u(1);u2=u(2);u3=u(3);
Theta_temp = zeros(216,1);
Theta_temp(  1)=    m1*m10*u1;
Theta_temp(  2)=    m1*m10*u2;
Theta_temp(  3)=    m1*m11*u1;
Theta_temp(  4)=    m10*m5*u1;
Theta_temp(  5)=    m1*m10*u3;
Theta_temp(  6)=     m1*m6*u1;
Theta_temp(  7)=     m2*m5*u1;
Theta_temp(  8)=    m1*m11*u2;
Theta_temp(  9)=    m10*m5*u2;
Theta_temp( 10)=     m1*m6*u2;
Theta_temp( 11)=     m2*m5*u2;
Theta_temp( 12)=    m11*m5*u1;
Theta_temp( 13)=    m1*m11*u3;
Theta_temp( 14)=    m10*m5*u3;
Theta_temp( 15)=     m2*m9*u1;
Theta_temp( 16)=     m1*m6*u3;
Theta_temp( 17)=     m1*m7*u1;
Theta_temp( 18)=     m2*m5*u3;
Theta_temp( 19)=     m3*m5*u1;
Theta_temp( 20)=    m11*m5*u2;
Theta_temp( 21)=     m2*m9*u2;
Theta_temp( 22)=     m1*m7*u2;
Theta_temp( 23)=     m3*m5*u2;
Theta_temp( 24)=    m11*m5*u3;
Theta_temp( 25)=     m6*m9*u1;
Theta_temp( 26)=     m2*m9*u3;
Theta_temp( 27)=     m3*m9*u1;
Theta_temp( 28)=     m1*m7*u3;
Theta_temp( 29)=     m3*m5*u3;
Theta_temp( 30)=     m6*m9*u2;
Theta_temp( 31)=     m3*m9*u2;
Theta_temp( 32)=     m6*m9*u3;
Theta_temp( 33)=     m7*m9*u1;
Theta_temp( 34)=     m3*m9*u3;
Theta_temp( 35)=     m7*m9*u2;
Theta_temp( 36)=     m7*m9*u3;
Theta_temp( 37)=    m11*m2*u1;
Theta_temp( 38)=    m10*m3*u1;
Theta_temp( 39)=    m11*m2*u2;
Theta_temp( 40)=    m10*m3*u2;
Theta_temp( 41)=    m11*m6*u1;
Theta_temp( 42)=    m11*m2*u3;
Theta_temp( 43)=    m10*m7*u1;
Theta_temp( 44)=    m10*m3*u3;
Theta_temp( 45)=     m2*m7*u1;
Theta_temp( 46)=     m3*m6*u1;
Theta_temp( 47)=    m11*m6*u2;
Theta_temp( 48)=    m10*m7*u2;
Theta_temp( 49)=     m2*m7*u2;
Theta_temp( 50)=     m3*m6*u2;
Theta_temp( 51)=    m11*m6*u3;
Theta_temp( 52)=    m10*m7*u3;
Theta_temp( 53)=     m2*m7*u3;
Theta_temp( 54)=     m3*m6*u3;
Theta_temp( 55)=    m12*m3*u1;
Theta_temp( 56)=    m11*m4*u1;
Theta_temp( 57)=    m12*m2*u1;
Theta_temp( 58)=    m12*m3*u2;
Theta_temp( 59)=    m11*m4*u2;
Theta_temp( 60)=    m10*m4*u1;
Theta_temp( 61)=    m12*m7*u1;
Theta_temp( 62)=    m12*m2*u2;
Theta_temp( 63)=    m12*m3*u3;
Theta_temp( 64)=    m11*m8*u1;
Theta_temp( 65)=    m11*m4*u3;
Theta_temp( 66)=    m10*m4*u2;
Theta_temp( 67)=    m12*m6*u1;
Theta_temp( 68)=    m12*m7*u2;
Theta_temp( 69)=    m12*m2*u3;
Theta_temp( 70)=     m3*m8*u1;
Theta_temp( 71)=     m4*m7*u1;
Theta_temp( 72)=    m11*m8*u2;
Theta_temp( 73)=    m10*m8*u1;
Theta_temp( 74)=    m10*m4*u3;
Theta_temp( 75)=    m12*m6*u2;
Theta_temp( 76)=    m12*m7*u3;
Theta_temp( 77)=     m2*m8*u1;
Theta_temp( 78)=     m3*m8*u2;
Theta_temp( 79)=     m4*m6*u1;
Theta_temp( 80)=     m4*m7*u2;
Theta_temp( 81)=    m11*m8*u3;
Theta_temp( 82)=    m10*m8*u2;
Theta_temp( 83)=    m12*m6*u3;
Theta_temp( 84)=     m2*m8*u2;
Theta_temp( 85)=     m3*m8*u3;
Theta_temp( 86)=     m4*m6*u2;
Theta_temp( 87)=     m4*m7*u3;
Theta_temp( 88)=    m10*m8*u3;
Theta_temp( 89)=     m2*m8*u3;
Theta_temp( 90)=     m4*m6*u3;
Theta_temp( 91)= m1*m11*p1*u2;
Theta_temp( 92)= m1*m11*p2*u1;
Theta_temp( 93)= m1*m11*p1*u3;
Theta_temp( 94)= m1*m11*p3*u1;
Theta_temp( 95)= m1*m10*p1*u2;
Theta_temp( 96)= m1*m10*p2*u1;
Theta_temp( 97)= m11*m5*p1*u2;
Theta_temp( 98)= m11*m5*p2*u1;
Theta_temp( 99)= m1*m11*p2*u3;
Theta_temp(100)= m1*m11*p3*u2;
Theta_temp(101)= m1*m10*p1*u3;
Theta_temp(102)= m1*m10*p3*u1;
Theta_temp(103)=  m1*m7*p1*u2;
Theta_temp(104)=  m1*m7*p2*u1;
Theta_temp(105)=  m3*m5*p1*u2;
Theta_temp(106)=  m3*m5*p2*u1;
Theta_temp(107)= m11*m5*p1*u3;
Theta_temp(108)= m11*m5*p3*u1;
Theta_temp(109)= m10*m5*p1*u2;
Theta_temp(110)= m10*m5*p2*u1;
Theta_temp(111)= m1*m10*p2*u3;
Theta_temp(112)= m1*m10*p3*u2;
Theta_temp(113)=  m1*m6*p1*u2;
Theta_temp(114)=  m1*m6*p2*u1;
Theta_temp(115)=  m1*m7*p1*u3;
Theta_temp(116)=  m1*m7*p3*u1;
Theta_temp(117)=  m2*m5*p1*u2;
Theta_temp(118)=  m2*m5*p2*u1;
Theta_temp(119)=  m3*m5*p1*u3;
Theta_temp(120)=  m3*m5*p3*u1;
Theta_temp(121)= m11*m5*p2*u3;
Theta_temp(122)= m11*m5*p3*u2;
Theta_temp(123)= m10*m5*p1*u3;
Theta_temp(124)= m10*m5*p3*u1;
Theta_temp(125)=  m3*m9*p1*u2;
Theta_temp(126)=  m3*m9*p2*u1;
Theta_temp(127)=  m1*m6*p1*u3;
Theta_temp(128)=  m1*m6*p3*u1;
Theta_temp(129)=  m1*m7*p2*u3;
Theta_temp(130)=  m1*m7*p3*u2;
Theta_temp(131)=  m2*m5*p1*u3;
Theta_temp(132)=  m2*m5*p3*u1;
Theta_temp(133)=  m3*m5*p2*u3;
Theta_temp(134)=  m3*m5*p3*u2;
Theta_temp(135)= m10*m5*p2*u3;
Theta_temp(136)= m10*m5*p3*u2;
Theta_temp(137)=  m2*m9*p1*u2;
Theta_temp(138)=  m2*m9*p2*u1;
Theta_temp(139)=  m3*m9*p1*u3;
Theta_temp(140)=  m3*m9*p3*u1;
Theta_temp(141)=  m1*m6*p2*u3;
Theta_temp(142)=  m1*m6*p3*u2;
Theta_temp(143)=  m2*m5*p2*u3;
Theta_temp(144)=  m2*m5*p3*u2;
Theta_temp(145)=  m7*m9*p1*u2;
Theta_temp(146)=  m7*m9*p2*u1;
Theta_temp(147)=  m2*m9*p1*u3;
Theta_temp(148)=  m2*m9*p3*u1;
Theta_temp(149)=  m3*m9*p2*u3;
Theta_temp(150)=  m3*m9*p3*u2;
Theta_temp(151)=  m6*m9*p1*u2;
Theta_temp(152)=  m6*m9*p2*u1;
Theta_temp(153)=  m7*m9*p1*u3;
Theta_temp(154)=  m7*m9*p3*u1;
Theta_temp(155)=  m2*m9*p2*u3;
Theta_temp(156)=  m2*m9*p3*u2;
Theta_temp(157)=  m6*m9*p1*u3;
Theta_temp(158)=  m6*m9*p3*u1;
Theta_temp(159)=  m7*m9*p2*u3;
Theta_temp(160)=  m7*m9*p3*u2;
Theta_temp(161)=  m6*m9*p2*u3;
Theta_temp(162)=  m6*m9*p3*u2;
Theta_temp(163)=    m1*m12*u1;
Theta_temp(164)=    m1*m12*u2;
Theta_temp(165)=    m12*m5*u1;
Theta_temp(166)=    m1*m12*u3;
Theta_temp(167)=    m12*m5*u2;
Theta_temp(168)=     m1*m8*u1;
Theta_temp(169)=     m4*m5*u1;
Theta_temp(170)=    m12*m5*u3;
Theta_temp(171)=     m1*m8*u2;
Theta_temp(172)=     m4*m5*u2;
Theta_temp(173)=     m4*m9*u1;
Theta_temp(174)=     m1*m8*u3;
Theta_temp(175)=     m4*m5*u3;
Theta_temp(176)=     m4*m9*u2;
Theta_temp(177)=     m8*m9*u1;
Theta_temp(178)=     m4*m9*u3;
Theta_temp(179)=     m8*m9*u2;
Theta_temp(180)=     m8*m9*u3;
Theta_temp(181)= m11*m2*p1*u2;
Theta_temp(182)= m11*m2*p2*u1;
Theta_temp(183)= m10*m3*p1*u2;
Theta_temp(184)= m10*m3*p2*u1;
Theta_temp(185)= m11*m2*p1*u3;
Theta_temp(186)= m11*m2*p3*u1;
Theta_temp(187)= m10*m3*p1*u3;
Theta_temp(188)= m10*m3*p3*u1;
Theta_temp(189)= m11*m6*p1*u2;
Theta_temp(190)= m11*m6*p2*u1;
Theta_temp(191)= m11*m2*p2*u3;
Theta_temp(192)= m11*m2*p3*u2;
Theta_temp(193)= m10*m7*p1*u2;
Theta_temp(194)= m10*m7*p2*u1;
Theta_temp(195)= m10*m3*p2*u3;
Theta_temp(196)= m10*m3*p3*u2;
Theta_temp(197)=  m2*m7*p1*u2;
Theta_temp(198)=  m2*m7*p2*u1;
Theta_temp(199)=  m3*m6*p1*u2;
Theta_temp(200)=  m3*m6*p2*u1;
Theta_temp(201)= m11*m6*p1*u3;
Theta_temp(202)= m11*m6*p3*u1;
Theta_temp(203)= m10*m7*p1*u3;
Theta_temp(204)= m10*m7*p3*u1;
Theta_temp(205)=  m2*m7*p1*u3;
Theta_temp(206)=  m2*m7*p3*u1;
Theta_temp(207)=  m3*m6*p1*u3;
Theta_temp(208)=  m3*m6*p3*u1;
Theta_temp(209)= m11*m6*p2*u3;
Theta_temp(210)= m11*m6*p3*u2;
Theta_temp(211)= m10*m7*p2*u3;
Theta_temp(212)= m10*m7*p3*u2;
Theta_temp(213)=  m2*m7*p2*u3;
Theta_temp(214)=  m2*m7*p3*u2;
Theta_temp(215)=  m3*m6*p2*u3;
Theta_temp(216)=  m3*m6*p3*u2;
Theta = Theta_temp;