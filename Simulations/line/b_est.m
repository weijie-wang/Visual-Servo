%%-----------------------------------------------------------------------%%
% Description: b_est.m                                                    %
%                                                                         %
%   Input:  T           4x4 endeffecter (frame) current homogenous        %
%                       transform matrix with respect to base frame       %
%           Theta       216x1 unknown parameters                          %
%   Output: b_esti      3x1                                               %
%                                                                         %
% Copyright:   Shanghai SJTU Autonomous Robot Lab.                        %
% Author:      Jay Wang                                                   %
% Version:     Beta 1.0.1                                                 %
% Data:        2015.04.17                                                 %
%%-----------------------------------------------------------------------%%

%%
function b_esti = b_est(T, Theta)
r1=T(1,1);r2=T(1,2);r3=T(1,3);r4=T(2,1);r5=T(2,2);r6=T(2,3);r7=T(3,1);r8=T(3,2);r9=T(3,3);
t1=T(1,4);t2=T(2,4);t3=T(3,4);
temp = [+r4 -r2 -r3 -r4 -r1 -r5 +r5 -r6 -r7 +r7 +r6 -r8 +r1 +r8 -r9 +r2 +r9 +r3 -r1*t2+r4*t1 -r1*t3+r7*t1 -r2*t2+r5*t1 -r2*t3+r8*t1 -r3*t2+r6*t1 -r3*t3+r9*t1 -r4*t3+r7*t2 +r4*t3-r7*t2 -r5*t3+r8*t2 +r5*t3-r8*t2 +r1*t2-r4*t1 -r6*t3+r9*t2 +r6*t3-r9*t2 +r2*t2-r5*t1 +r1*t3-r7*t1 +r3*t2-r6*t1 +r2*t3-r8*t1 +r3*t3-r9*t1 +r1*r5-r2*r4 -r1*r5+r2*r4 +r1*r6-r3*r4 -r1*r6+r3*r4 +r1*r8-r2*r7 -r1*r8+r2*r7 +r2*r6-r3*r5 -r2*r6+r3*r5 +r1*r9-r3*r7 -r1*r9+r3*r7 +r2*r9-r3*r8 -r2*r9+r3*r8 +r4*r8-r5*r7 -r4*r8+r5*r7 -r4*r8+r5*r7 +r4*r8-r5*r7 -r1*r5+r2*r4 +r1*r5-r2*r4 +r4*r9-r6*r7 -r4*r9+r6*r7 -r4*r9+r6*r7 +r4*r9-r6*r7 -r1*r6+r3*r4 +r1*r6-r3*r4 +r5*r9-r6*r8 -r5*r9+r6*r8 -r5*r9+r6*r8 +r5*r9-r6*r8 -r2*r6+r3*r5 +r2*r6-r3*r5 -r1*r8+r2*r7 +r1*r8-r2*r7 -r1*r9+r3*r7 +r1*r9-r3*r7 -r2*r9+r3*r8 +r2*r9-r3*r8 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ;0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 +r1 +r2 +r3 +r4 -r4 +r5 -r5 +r6 +r7 -r7 -r6 +r8 -r1 -r8 +r9 -r2 -r9 -r3 +r1*t2-r4*t1 +r1*t3-r7*t1 +r2*t2-r5*t1 +r2*t3-r8*t1 +r3*t2-r6*t1 +r3*t3-r9*t1 +r4*t3-r7*t2 -r4*t3+r7*t2 +r5*t3-r8*t2 -r5*t3+r8*t2 -r1*t2+r4*t1 +r6*t3-r9*t2 -r6*t3+r9*t2 -r2*t2+r5*t1 -r1*t3+r7*t1 -r3*t2+r6*t1 -r2*t3+r8*t1 -r3*t3+r9*t1 -r1*r5+r2*r4 +r1*r5-r2*r4 -r1*r6+r3*r4 +r1*r6-r3*r4 -r1*r8+r2*r7 +r1*r8-r2*r7 -r2*r6+r3*r5 +r2*r6-r3*r5 -r1*r9+r3*r7 +r1*r9-r3*r7 -r2*r9+r3*r8 +r2*r9-r3*r8 -r4*r8+r5*r7 +r4*r8-r5*r7 +r4*r8-r5*r7 -r4*r8+r5*r7 +r1*r5-r2*r4 -r1*r5+r2*r4 -r4*r9+r6*r7 +r4*r9-r6*r7 +r4*r9-r6*r7 -r4*r9+r6*r7 +r1*r6-r3*r4 -r1*r6+r3*r4 -r5*r9+r6*r8 +r5*r9-r6*r8 +r5*r9-r6*r8 -r5*r9+r6*r8 +r2*r6-r3*r5 -r2*r6+r3*r5 +r1*r8-r2*r7 -r1*r8+r2*r7 +r1*r9-r3*r7 -r1*r9+r3*r7 +r2*r9-r3*r8 -r2*r9+r3*r8 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ;0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 +r1 -r1 -r2 +r2 -r3 -r4 +r3 +r4 -r5 +r5 -r6 -r7 +r6 +r7 -r8 +r8 -r9 +r9 -r1*t2+r4*t1 +r1*t2-r4*t1 -r2*t2+r5*t1 -r1*t3+r7*t1 +r2*t2-r5*t1 +r1*t3-r7*t1 -r3*t2+r6*t1 -r2*t3+r8*t1 +r3*t2-r6*t1 +r2*t3-r8*t1 -r3*t3+r9*t1 -r4*t3+r7*t2 +r3*t3-r9*t1 +r4*t3-r7*t2 -r5*t3+r8*t2 +r5*t3-r8*t2 -r6*t3+r9*t2 +r6*t3-r9*t2 +r1*r5-r2*r4 -r1*r5+r2*r4 -r1*r5+r2*r4 +r1*r5-r2*r4 +r1*r6-r3*r4 -r1*r6+r3*r4 -r1*r6+r3*r4 +r1*r6-r3*r4 +r2*r6-r3*r5 -r2*r6+r3*r5 +r1*r8-r2*r7 -r1*r8+r2*r7 -r2*r6+r3*r5 +r2*r6-r3*r5 -r1*r8+r2*r7 +r1*r8-r2*r7 +r1*r9-r3*r7 -r1*r9+r3*r7 -r1*r9+r3*r7 +r1*r9-r3*r7 +r2*r9-r3*r8 -r2*r9+r3*r8 +r4*r8-r5*r7 -r4*r8+r5*r7 -r2*r9+r3*r8 +r2*r9-r3*r8 -r4*r8+r5*r7 +r4*r8-r5*r7 +r4*r9-r6*r7 -r4*r9+r6*r7 -r4*r9+r6*r7 +r4*r9-r6*r7 +r5*r9-r6*r8 -r5*r9+r6*r8 -r5*r9+r6*r8 +r5*r9-r6*r8 ;];
b_esti = temp * Theta;